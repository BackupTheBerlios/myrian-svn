//
// Copyright (C) 2002-2004 Red Hat, Inc.  All Rights Reserved.
//
// This program is Open Source software; you can redistribute it and/or
// modify it under the terms of the Open Software License version 2.1 as
// published by the Open Source Initiative.
//
// You should have received a copy of the Open Software License along
// with this program; if not, you may obtain a copy of the Open Software
// License version 2.1 from http://www.opensource.org/licenses/osl-2.1.php
// or by writing the Open Source Initiative c/o Lawrence Rosen, Esq.,
// 3001 King Ranch Road, Ukiah, CA 95482.
model examples;

query DataOperationWithPLSQLAndArgsAndReturn {
    BigDecimal Item;

    do {
        select DataOperationProcWithReturn(:entryID) as entry from dual
    } map {
        Item = dual.entry;
    }
}

query SubQuery {
    do {
        select 1
        from dual
        where 2 = :two
    }
}

query NamedFilter {
    do {
        trunc(action_time, 'yyyy') = to_date(:year || '0101', 'yyyymmdd')
    }
}

query DataQueryLongNames {
    String aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;
    String bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;
    String cccccccccccccccccccccccccccccccc;
    String dddddddddddddddddddddddddddddddd;
    String eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee;
    String ffffffffffffffffffffffffffffffff;
    String gggggggggggggggggggggggggggggggg;
    String hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh;
    String iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii;
    String jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj;
    String kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk;

    do {
        select 'a' as a,
               'b' as b,
               'c' as c,
               'd' as d,
               'e' as e,
               'f' as f,
               'g' as g,
               'h' as h,
               'i' as i,
               'j' as j,
               'k' as k
        from dual
    } map {
        aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa = a;
        bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb = b;
        cccccccccccccccccccccccccccccccc = c;
        dddddddddddddddddddddddddddddddd = d;
        eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee = e;
        ffffffffffffffffffffffffffffffff = f;
        gggggggggggggggggggggggggggggggg = g;
        hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh = h;
        iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii = i;
        jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = j;
        kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = k;
    }
}
