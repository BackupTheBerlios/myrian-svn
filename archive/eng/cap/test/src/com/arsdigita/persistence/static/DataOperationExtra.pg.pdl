//
// Copyright (C) 2002-2004 Red Hat, Inc.  All Rights Reserved.
//
// This program is Open Source software; you can redistribute it and/or
// modify it under the terms of the Open Software License version 2.1 as
// published by the Open Source Initiative.
//
// You should have received a copy of the Open Software License along
// with this program; if not, you may obtain a copy of the Open Software
// License version 2.1 from http://www.opensource.org/licenses/osl-2.1.php
// or by writing the Open Source Initiative c/o Lawrence Rosen, Esq.,
// 3001 King Ranch Road, Ukiah, CA 95482.
model examples;

data operation DataOperationWithPLSQL {
    do {
        select DataOperationProcedure();
    }
}

data operation DataOperationWithPLSQLAndReturn {
    do {
        select DataOperationFunction() as returnValue
    } map {
        returnValue = returnValue;
    }
}

data operation DataOperationWithPLSQLAndArgs {
    do {
        select DataOperationProcedureWithArgs(:priority)
    }
}


data operation DataOperationProcedureOneArg {
    do {
        select DataOperationProcedureOneArg(:description)
    }
}

query DataOperationFunction {
    String newValue;
    do {
        select DataOperationFunction() as newValue
    } map {
        newValue = newValue;
    }
}

query DataOperationProcWithOut {
    String newID;
    Integer oldID;
    do {
        select DataOperationProcWithOut(:oldID) as newID
    } map {
        newID = newID;
        oldID = newID;
    }
}

query DataOperationProcWithInOut {
    String newID;
    do {
        select DataOperationProcWithInOut(:oldID) as newID
    } map {
        newID = newID;
    }
}

query DataOperationProcWithInOutInt {
    Integer oldID;
    Integer newID;
    do {
        select DataOperationProcWithInOutInt(:oldID) as newID
    } map {
        oldID = newID;
        newID = newID;
    }
}

query DataOperationProcWithDates {
    Date newDate;
    do {
        select DataOperationProcWithDates(:idToUpdate, :oldDate) as newDate
    } map {
        newDate = newDate;
    }
}


query PLSQLWithArbitraryArgsQuery {
     do {
         select PLSQLWithArbitraryArgs(:arg1, :arg2, :arg3, :arg4, :arg5)
     }  
}
