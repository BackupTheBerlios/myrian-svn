//
// Copyright (C) 2001-2004 Red Hat, Inc.  All Rights Reserved.
//
// This program is Open Source software; you can redistribute it and/or
// modify it under the terms of the Open Software License version 2.1 as
// published by the Open Source Initiative.
//
// You should have received a copy of the Open Software License along
// with this program; if not, you may obtain a copy of the Open Software
// License version 2.1 from http://www.opensource.org/licenses/osl-2.1.php
// or by writing the Open Source Initiative c/o Lawrence Rosen, Esq.,
// 3001 King Ranch Road, Ukiah, CA 95482.
model examples;

object type Node {
    BigDecimal[1..1] id = t_nodes.node_id;
    String name;
    Node[0..1] parent;
    Node[0..n] children;

    object key(id);

    retrieve all {
        do {
            select * from t_nodes
        } map {
            id = t_nodes.node_id;
            name = t_nodes.name;
        }
    }

    retrieve {
        do {
            select *
            from t_nodes
            where node_id = :id
        } map {
            name = t_nodes.name;
        }
    }

    insert {
        do {
            insert into t_nodes
            (node_id, name, parent_id)
            values
            (:id, :name, :parent.id)
        }
    }

    update {
        do {
            update t_nodes
            set name = :name,
                parent_id = :parent.id
            where node_id = :id
        }
    }

    delete {
        do {
            delete from t_nodes where node_id = :id
        }
    }

    retrieve parent {
        do {
            select *
            from t_nodes
            where node_id = (select parent_id from t_nodes where node_id = :id)
        } map {
            parent.id = t_nodes.node_id;
            parent.name = t_nodes.name;
        }
    }

    add parent {}
    remove parent {}

    retrieve children {
        do {
            select *
            from t_nodes
            where parent_id = :id
        } map {
            children.id = t_nodes.node_id;
            children.name = t_nodes.name;
        }
    }
    add children {
    }

}

query nodesQuery {
    BigDecimal id;
    String name;

    do {
        select * from t_nodes
    } map {
        id = t_nodes.node_id;
        name = t_nodes.name;
    }
}

object type LazyNode extends Node {
    // a lazy property with no retrieve
    Node[0..1] lazyProperty;

    retrieve {
        do {
            select *
            from t_nodes
            where node_id = :id
        }
        // We do nothing here in order to trigger lazy loading.
    }

    insert {}
    update {}
    delete {}
}

query lazyNodesQuery {
    LazyNode[1..1] node;
    do {
        select * from t_nodes
    } map {
        node.id = t_nodes.node_id;
    }
}
