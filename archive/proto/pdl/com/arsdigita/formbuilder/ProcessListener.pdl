//
// Copyright (C) 2001, 2002 Red Hat Inc. All Rights Reserved.
//
// The contents of this file are subject to the CCM Public
// License (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of
// the License at http://www.redhat.com/licenses/ccmpl.html
//
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
//
// $Id: //core-platform/proto/pdl/com/arsdigita/formbuilder/ProcessListener.pdl#1 $ 
// $DateTime: 2002/11/27 19:51:05 $

model com.arsdigita.formbuilder;

import com.arsdigita.kernel.*;

object type ProcessListener extends ACSObject {
    String[0..1] name = bebop_process_listeners.name VARCHAR(40);
    String[0..1] description = bebop_process_listeners.description VARCHAR(120);
    String[0..1] listenerClass = bebop_process_listeners.listener_class VARCHAR(100);

    reference key (bebop_process_listeners.listener_id);	
}


association {
    FormSection[1..1] form = join bebop_process_listeners.listener_id 
                               to bebop_form_process_listeners.listener_id,
                             join bebop_form_process_listeners.form_section_id 
                               to bebop_form_sections.form_section_id;
    component ProcessListener[0..n] listeners = join bebop_form_sections.form_section_id 
                               to bebop_form_process_listeners.form_section_id,
                             join bebop_form_process_listeners.listener_id 
                               to bebop_process_listeners.listener_id;
    BigDecimal position = bebop_form_process_listeners.position;
}


query RetrieveProcessListeners {
    BigDecimal id;
    String defaultDomainClass;
    Integer position;

    do {
        select o.object_id,
            o.default_domain_class,
            fpl.position
        from bebop_form_process_listeners fpl,
            acs_objects o
        where o.object_id = fpl.listener_id
        and fpl.form_section_id = :formSectionID
    } map {
        id = o.object_id;
        defaultDomainClass = o.default_domain_class;
        position = fpl.position;
    }
}

data operation AddProcessListener {
    do {
        begin
            update bebop_form_process_listeners
              set position = position + 1
              where form_section_id = :formSectionID
              and position >= :position;

            insert into bebop_form_process_listeners
                (form_section_id, listener_id, position)
            values 
                (:formSectionID, :listenerID, :position);
        end;
    }
}


data operation RemoveProcessListener {
    do {
        begin
            delete from bebop_form_process_listeners 
              where form_section_id = :formSectionID
              and listener_id = :listenerID;

            update bebop_form_process_listeners
              set position = position - 1
              where form_section_id = :formSectionID
              and position > :position;
        end;
    }
}

data operation ClearProcessListeners {
    do {
        begin
            delete from bebop_form_process_listeners
                where form_section_id = :formSectionID;

            delete from bebop_process_listeners
                where listener_id not in 
                (select listener_id
                 from bebop_form_process_listeners);
        end;
    }
}
