//
// Copyright (C) 2002-2004 Red Hat Inc. All Rights Reserved.
//
// The contents of this file are subject to the CCM Public
// License (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of the
// License at http://www.redhat.com/licenses/ccmpl.html.
//
// Software distributed under the License is distributed on an
// "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
// or implied. See the License for the specific language governing
// rights and limitations under the License.
//
// $Id: //users/rhs/persistence/cap/test/src/com/arsdigita/persistence/static/DataQueryExtra.ora.pdl#1 $
// $DateTime: 2004/05/03 13:36:20 $
model examples;

query DataOperationWithPLSQLAndArgsAndReturn {
    BigDecimal Item;

    do {
        select DataOperationProcWithReturn(:entryID) as entry from dual
    } map {
        Item = dual.entry;
    }
}

query SubQuery {
    do {
        select 1
        from dual
        where 2 = :two
    }
}

query NamedFilter {
    do {
        trunc(action_time, 'yyyy') = to_date(:year || '0101', 'yyyymmdd')
    }
}

query DataQueryLongNames {
    String aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;
    String bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;
    String cccccccccccccccccccccccccccccccc;
    String dddddddddddddddddddddddddddddddd;
    String eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee;
    String ffffffffffffffffffffffffffffffff;
    String gggggggggggggggggggggggggggggggg;
    String hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh;
    String iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii;
    String jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj;
    String kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk;

    do {
        select 'a' as a,
               'b' as b,
               'c' as c,
               'd' as d,
               'e' as e,
               'f' as f,
               'g' as g,
               'h' as h,
               'i' as i,
               'j' as j,
               'k' as k
        from dual
    } map {
        aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa = a;
        bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb = b;
        cccccccccccccccccccccccccccccccc = c;
        dddddddddddddddddddddddddddddddd = d;
        eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee = e;
        ffffffffffffffffffffffffffffffff = f;
        gggggggggggggggggggggggggggggggg = g;
        hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh = h;
        iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii = i;
        jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj = j;
        kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk = k;
    }
}
