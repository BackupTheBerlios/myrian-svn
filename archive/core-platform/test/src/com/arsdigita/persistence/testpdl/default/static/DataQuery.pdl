//
// Copyright (C) 2001 ArsDigita Corporation. All Rights Reserved.
//
// The contents of this file are subject to the ArsDigita Public 
// License (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of
// the License at http://www.arsdigita.com/ADPL.txt
//
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
//

model examples;

query DataQuery returns 0..n {
    do {
        select entry_id, action, description, priority, action_time
        from t_data_query t
    } map {
        id = t.entry_id;
        action = t.action;
        description = t.description;
        priority = t.priority;
        actionTime = t.action_time;
    }
}


query DataQueryMaxID {
    do {
        select max(entry_id) as entry_id
        from t_data_query t
    } map {
        id = t.entry_id;
    }
}


query DataQueryWithBindVariables {
    do {
        select *
        from (select * from t_data_query 
                   where lower(substr(description, 0, 5)) = :description) t
        where priority > :priority
    } map {
        id = t.entry_id;
        action = t.action;
        priority = t.priority;
    }
}

query DataQueryWithMoreBinds {
    do {
        select * from t_data_query
        where description = :description
    } map {
        id = t.entry_id;
    }
}



query DataQueryWithDateBindVariable {
    do {
        select *
        from t_data_query 
        where action_time < :actionTime
    } map {
        id = t.entry_id;
        action = t.action;
        priority = t.priority;
    }
}

query DataQueryWithMax {
    do {
        select max(priority) as priority 
        from t_data_query
    } map {
        priority = t_data_query.priority;
    }
}


query DataQueryWithMaxAndSubSelect {
    do {
        select max(priority) as priority 
        from t_data_query
        where entry_id in (select entry_id from t_data_query where action = :action)
    } map {
        priority = t_data_query.priority;
    }
}


query DataQueryNoView {
    options {
	WRAP_QUERIES = false;
    }

    do {
        select * 
        from t_data_query
    } map {
        id = t.entry_id;
        action = t.action;
        description = t.description;
        priority = t.priority;
        actionTime = t.action_time;
    }
}

query DataQueryUnion {
    do {
        select * 
        from t_data_query 
        where priority < :priority
        union 
        select * 
        from t_data_query
        where action = :action
    } map {
        id = t.entry_id;
        action = t.action;
        description = t.description;
        priority = t.priority;
        actionTime = t.action_time;
    }
}

query DataQueryWithIn {
    do {
        select *
        from t_data_query t
        where action in :actions
    } map {
        id = t.entry_id;
        action = t.action;
        description = t.description;
        priority = t.priority;
        actionTime = t.action_time;
    }
}


query DataQueryOneRow returns 1..1 {
    do {
        select max(entry_id) as entry_id
        from t_data_query
    } map {
        id = t_data_query.entry_id;
    }
}


query DataQueryZeroOrOneRow returns 0..1 {
    do {
        select max(entry_id) as entry_id
        from t_data_query
    } map {
        id = t_data_query.entry_id;
    }
}


object type multipleObjectIDs {
    BigDecimal id;
    BigDecimal objectID;
    
    object key (id);
    
    retrieve {
        do {
            select messages.object_id, acs_objects.object_id
            from   messages, acs_objects
            where  messages.message_id = acs_objects.object_id
            and  messages.message_id = :id
        } map {
            objectID = messages.object_id;
            id = acs_objects.object_id;
        }
    }
}
