//
// Copyright (C) 2001 ArsDigita Corporation. All Rights Reserved.
//
// The contents of this file are subject to the ArsDigita Public 
// License (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of
// the License at http://www.arsdigita.com/ADPL.txt
//
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
//

model com.arsdigita.messaging;

import com.arsdigita.kernel.*;

object type Message extends ACSObject {

    String     replyTo = messages.reply_to;
    String     subject = messages.subject;
    String     body = messages.body;
    String     type = messages.type;
    Date       sent = messages.sent_date;
    BigDecimal inReplyTo = messages.in_reply_to;
    BigDecimal objectID = messages.object_id;
    String     messageID = messages.rfc_message_id;
   
    Party[1..1] sender = join messages.sender to parties.party_id;
    composite MessagePart[0..n] messagePart;

    reference key (messages.message_id);

    add messagePart {
        do {
            update message_parts
            set    message_id = :id
            where  part_id    = :messagePart.id
        }
    }

    retrieve messagePart {
	do {
	     select part_id,
                    message_id,
                    type,
                    name,
                    description,
                    disposition,
                    content
             from   message_parts
             where  message_id = :id
        } map {
             messagePart.id          = part_id;
             messagePart.messageID   = message_id;
             messagePart.type        = type;
             messagePart.name        = name;
             messagePart.description = description;
             messagePart.disposition = disposition;
             messagePart.content     = content;
        }
    }

    remove messagePart {
        do {
            delete from message_parts 
            where  part_id    = :messagePart.id
            and    message_id = :id
        }
    }

    clear messagePart {
        do {
            delete from message_parts where message_id = :id
        }
    }
}



