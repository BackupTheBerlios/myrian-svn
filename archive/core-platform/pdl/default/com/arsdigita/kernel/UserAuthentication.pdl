//
// Copyright (C) 2001 ArsDigita Corporation. All Rights Reserved.
//
// The contents of this file are subject to the ArsDigita Public 
// License (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of
// the License at http://www.arsdigita.com/ADPL.txt
//
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
//

model com.arsdigita.kernel;

object type UserAuthentication {
    BigDecimal id;
    String[1..1] loginName;
    String[1..1] password;
    String salt;
    String passwordQuestion;
    String passwordAnswer;
    User[1..1] user;

    object key(id);

    retrieve {
        do {
            select user_authentication.auth_id,
	           parties.primary_email,
                   user_authentication.password,
                   user_authentication.salt,
                   user_authentication.password_question,
                   user_authentication.password_answer
              from user_authentication, parties
             where user_authentication.auth_id = :id
               and user_authentication.user_id = parties.party_id
        } map {    
	    id = user_authentication.auth_id;
            loginName = parties.primary_email;
            password = user_authentication.password;
            salt = user_authentication.salt;
            passwordQuestion = user_authentication.password_question;
            passwordAnswer = user_authentication.password_answer;
        }
    }

    retrieve all {
        do {
            select user_authentication.auth_id,
	           parties.primary_email,
                   user_authentication.password,
                   user_authentication.salt,
                   user_authentication.password_question,
                   user_authentication.password_answer
              from user_authentication, parties
             where user_authentication.user_id = parties.party_id
        } map {
	    id = user_authentication.auth_id;
            loginName = parties.primary_email;
            password = user_authentication.password;
            salt = user_authentication.salt;
            passwordQuestion = user_authentication.password_question;
            passwordAnswer = user_authentication.password_answer;
        }
    }

    insert {
	do {
	    insert into user_authentication
	    (auth_id, password, salt, 
	     password_question, password_answer, user_id)
	    values
	    (:id, :password, :salt, 
	     :passwordQuestion, :passwordAnswer, :user.id)
	}
    }

    delete {
	do {
	    delete from user_authentication where auth_id = :id
	}
    }

    update {
        do {
            update user_authentication
            set password = :password,
                salt = :salt,
                password_answer = :passwordAnswer,
                password_question = :passwordQuestion,
	        user_id = :user.id
            where auth_id = :id
        }
    }

    retrieve user {
        do {
            select users.user_id, users.screen_name,
	           parties.uri, acs_objects.object_type
	      from user_authentication, 
                   users, 
	           parties,
	           acs_objects
	     where users.user_id = user_authentication.user_id
	       and users.user_id = parties.party_id
	       and parties.party_id = acs_objects.object_id
	       and user_authentication.auth_id = :id
        } map {
            user.id = users.user_id;
            user.screenName = users.screen_name;

            user.uri = parties.uri;
            user.objectType = acs_objects.object_type;
        }
    }

    add user {}
    remove user {}
}

query UserAuthenticationForLogin {
    do {
        select user_authentication.auth_id,
	           parties.primary_email
          from user_authentication, 
	           parties
         where user_authentication.user_id = parties.party_id
    } map {
        id = user_authentication.auth_id;
        loginName = parties.primary_email;
    }
}
