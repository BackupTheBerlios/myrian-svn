//
// Copyright (C) 2001, 2002 Red Hat Inc. All Rights Reserved.
//
// The contents of this file are subject to the CCM Public
// License (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of
// the License at http://www.redhat.com/licenses/ccmpl.html
//
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
//
// $Id: //core-platform/dev/pdl/com/arsdigita/x/versioning/VersionedACSObject.pdl#3 $ 
// $DateTime: 2003/02/12 20:42:45 $

model com.arsdigita.x.versioning;

import com.arsdigita.kernel.*;

object type VersionedACSObject extends ACSObject {

  Boolean[1..1]             isDeleted = vcx_objects.is_deleted CHAR(1);
  VersionedACSObject[0..1]  master = join vcx_objects.master_id 
                                       to vcx_objects.object_id;

  reference key (vcx_objects.object_id);
}

query rollbackOperations {
  Operation           operation;
  VersionedACSObject  acsObject;
  BigDecimal          transID;
  BigDecimal          objectID;

  do {
    select 
      o.operation_id, o.change_id, o.action, o.attribute, o.classname,
      t.object_id,
      a.object_type, a.display_name, a.default_domain_class,
      v.master_id, v.is_deleted
    from
      vcx_operations o, vcx_obj_changes t, acs_objects a, vcx_objects v
    where
      (t.master_id = :masterID or (t.master_id is null and t.object_id = :masterID))
    and
      t.object_id = a.object_id
    and
      t.object_id = v.object_id
    and
      t.change_id = o.change_id
    order by
      t.timestamp desc, t.change_id desc
  } map {
    operation.id                 = o.operation_id;
    operation.action             = o.action;
    operation.attribute          = o.attribute;
    operation.classname          = o.classname;    
    operation.change.id     = o.change_id;
    acsObject.id                 = t.object_id;
    acsObject.defaultDomainClass = a.default_domain_class;
    acsObject.objectType         = a.object_type;
    acsObject.displayName        = a.display_name;
    acsObject.master.id          = v.master_id;
    acsObject.isDeleted          = v.is_deleted;
    transID                      = o.change_id;
    objectID                     = t.object_id;
  }
}

// this can be removed with proper usage of associations
data operation reparentTransactions {
  do {
    update vcx_obj_changes set master_id = :master
    where object_id = :id
  }
}

query childObjects {
    BigDecimal childID;
    do {
        select object_id from vcx_objects
        where master_id = :masterID
    } map {
        childID = object_id;
    }
}

