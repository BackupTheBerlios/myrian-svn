//
// Copyright (C) 2001 ArsDigita Corporation. All Rights Reserved.
//
// The contents of this file are subject to the ArsDigita Public 
// License (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of
// the License at http://www.arsdigita.com/ADPL.txt
//
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
//

model com.arsdigita.categorization;

import com.arsdigita.kernel.*;

object type ObjectCategoryMapping  {
    BigDecimal id = cat_object_category_map.object_category_map_id INTEGER;
    BigDecimal[1..1] parentCategoryID =
        cat_object_category_map.category_id INTEGER;
    BigDecimal[1..1] objectID = 
        cat_object_category_map.object_id INTEGER;
    Integer[1..1] sortKey = cat_object_category_map.sort_key INTEGER;
    Boolean[1..1] isDefault = cat_object_category_map.default_p CHAR(1);

    object key (id);

    insert {
        do {
            insert into cat_object_category_map (
                object_category_map_id,
                category_id,
                object_id,
                default_p,
                sort_key
            ) values (
                :id,
                :parentCategoryID,
                :objectID,
                :isDefault,
                (select CASE WHEN :sortKey is null 
                             THEN (select CASE WHEN max(sort_key) is null
                                               THEN 0 
                                               ELSE max(sort_key) 
                                          END + 1 
                                     from cat_object_category_map) 
                             ELSE :sortKey
                             END
                   from dual)
            )
        }
    } 

}

      
query objectCategoryMappingQuery {
    do {
        select category_id, object_id, object_category_map_id,
               default_p, sort_key
        from cat_object_category_map
    } map {
        categoryID = cat_object_category_map.category_id;
        sortKey = cat_object_category_map.sort_key;
        isDefault = cat_object_category_map.default_p;
        objectID = cat_object_category_map.object_id;
        objectCategoryMapID = cat_object_category_map.object_category_map_id;
    }
}


query objectClearDefaultParent {
    do {
        update cat_object_category_map
        set default_p = 'f'
        where object_category_map_id = :id
    }
}





