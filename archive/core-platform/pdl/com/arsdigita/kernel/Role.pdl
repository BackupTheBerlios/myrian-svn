//
// Copyright (C) 2001 ArsDigita Corporation. All Rights Reserved.
//
// The contents of this file are subject to the ArsDigita Public 
// License (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of
// the License at http://www.arsdigita.com/ADPL.txt
//
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
//

model com.arsdigita.kernel;

object type Role {
    BigDecimal[1..1] roleId;

    // The name of this role
    String[1..1]     name;

    // The group for which this role is defined
    Group[1..1]      sourceGroup;

    // The group which stores members in this role
    Group[1..1]      implicitGroup;

    // A textual description of this role
    String[0..1]     description;

    object key (roleId);

    retrieve {
        do {
            select *
              from roles
             where role_id = :roleId
        } map {
            roleId = role_id;
            name = name;
            description = description;
        }
    }

    insert {
        do {
            insert into roles
            (role_id, name, description, group_id, implicit_group_id)
            values
            (:roleId, :name, :description, :sourceGroup.id, :implicitGroup.id)
        }
    }    

    update {
        do {
            update roles
               set name = :name,
                   description = :description,
                   group_id = :sourceGroup.id
                   implicit_group_id = :implicitGroup.id
             where role_id = :roleId
        }
    }

    delete {
        do { delete from roles where role_id = :roleId }
    }

    retrieve sourceGroup {
        do {
	        select groups.group_id, groups.name,
	               parties.uri, 
                   acs_objects.object_type, acs_objects.display_name 
	          from roles,
                   groups, 
	               parties, 
	               acs_objects
	         where roles.group_id = groups.group_id
               and roles.role_id = :roleId
               and parties.party_id = groups.group_id
	           and acs_objects.object_id = parties.party_id
        } map {
            sourceGroup.id = groups.group_id;
            sourceGroup.name = groups.name;
            sourceGroup.uri = parties.uri;
            sourceGroup.objectType = acs_objects.object_type;
            sourceGroup.displayName = acs_objects.display_name;
        }
    }

    add sourceGroup { }
    remove sourceGroup { }

    retrieve implicitGroup {
        do {
	        select groups.group_id, groups.name,
	               parties.uri, 
                   acs_objects.object_type, acs_objects.display_name 
	          from roles,
                   groups, 
	               parties, 
	               acs_objects
	         where roles.implicit_group_id = groups.group_id
               and roles.role_id = :roleId
               and parties.party_id = groups.group_id
	           and acs_objects.object_id = parties.party_id
        } map {
            implicitGroup.id = groups.group_id;
            implicitGroup.name = groups.name;
            implicitGroup.uri = parties.uri;
            implicitGroup.objectType = acs_objects.object_type;
            implicitGroup.displayName = acs_objects.display_name;
        }
    }

    add implicitGroup { }
    remove implicitGroup { }

}
