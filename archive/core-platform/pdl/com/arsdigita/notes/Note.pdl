//
// Copyright (C) 2001 ArsDigita Corporation. All Rights Reserved.
//
// The contents of this file are subject to the ArsDigita Public 
// License (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of
// the License at http://www.arsdigita.com/ADPL.txt
//
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
//

//
// Represent notes.
//
// @author <a href="mailto:scott@arsdigita.com">Scott Seago</a>
// @author <a href="mailto:tzumainn@arsdigita.com">Tzu-Mainn Chen</a>
// @version $Id: //core-platform/dev/pdl/com/arsdigita/notes/Note.pdl#2 $ by $Author: dennis $, $DateTime: 2002/07/18 13:18:21 $
//

model com.arsdigita.notes;

import com.arsdigita.kernel.*;

object type Note extends ACSObject {
    String title;
    String body;
    NoteTheme[0..1] theme;

    retrieve {
        do {
            select n.note_id,
                   n.title,
                   n.body,
                   o.object_type
            from notes n,
                 acs_objects o
            where note_id=:id
            and o.object_id = n.note_id
        } map {
            id = n.note_id;
            title = n.title;
            body = n.body;
            objectType = acs_objects.object_type;
        }
    }

    retrieve all {
        do {
            select n.note_id,
                   n.title,
                   n.body,
                   o.object_type 
            from notes n,
                 acs_objects o
            where o.object_id = n.note_id
        } map {
            id = n.note_id;
            title = n.title;
            body = n.body;
            objectType = acs_objects.object_type;
        }
    }

    insert {
        super;
        do {
            insert into notes
            (note_id, title, body)
            values
            (:id, :title, :body)
        }
    }

    update {
        super;
        do {
            update notes
            set title = :title,
                body = :body
            where note_id = :id
        }
    }

    delete {
        do {
            delete from notes
            where note_id = :id
        }
        super;
    }

    add theme {
        do {
            update notes
            set theme_id = :theme.id
            where note_id = :id
        }
    }

    remove theme {
        do {
            update notes
            set theme_id = null
            where note_id = :id
        }
    }

    retrieve theme {
        do {
            select t.theme_id,
                   t.name,
                   o.object_type
            from notes n,
                 note_themes t,
                 acs_objects o
            where n.theme_id = t.theme_id
            and t.theme_id = o.object_id
            and n.note_id = :id
        } map {
            theme.id = t.theme_id;
            theme.name = t.name;
            theme.objectType = o.object_type;
        }
    }
}

query NotesRetrieveAll {
    do {
        select n.note_id,
               m.category_id,
               m.name,
               n.title,
               n.body, 
               n.creation_date,
               n.last_modified, 
               n.modifying_user,
               n.creation_user,
               n.note_rownum
        from (select nt.*,
                     a.*,
                     rownum as note_rownum
              from notes nt,
                   acs_auditing a
              where nt.note_id = a.object_id (+)) n,
             (select m.*,
                     name
              from cat_object_category_map m,
                   cat_categories c
              where c.category_id=m.category_id) m
        where n.note_id = m.object_id(+)
    } map {
        id = n.note_id;
        title = n.title;
        body = n.body;
        categoryID = m.category_id;
        categoryName = m.name;
        creationDate = n.creation_date;
        lastModified = n.last_modified;
        creationUser = n.creation_user;
        modifiedBy = n.modifying_user;
        noteNum = n.note_rownum;
    }
}

object type NoteTheme extends ACSObject {
    String name;
    Stylesheet[0..n] style;

    retrieve {
        do {
            select c.theme_id,
                   c.name,
                   o.object_type 
            from note_themes c,
                 acs_objects o
            where theme_id=:id
            and o.object_id = c.theme_id
        } map {
            id = c.theme_id;
            name = c.name;
            objectType = o.object_type;
        }
    }

    retrieve all {
        do {
            select c.theme_id,
                   c.name,
                   o.object_type  
            from note_themes c,
                 acs_objects o
            where o.object_id = c.theme_id
        } map {
            id = c.theme_id;
            name = c.name;
            objectType = o.object_type;
        }
    }

    insert {
        super;
        do {
            insert into note_themes
            (theme_id, name)
            values
            (:id, :name)
        }
    }

    update {
        super;
        do {
            update note_themes
            set name = :name
            where themes_id = :id
        }
    }

    delete {
        do {
            delete from note_themes
            where theme_id = :id
        }
        super;
    }

    add style {
        do {
            insert into theme_stylesheet_map
            (theme_id, stylesheet_id)
            values
            (:id, :style.id)
        }
    }

    remove style {
        do {
            delete from theme_stylesheet_map
            where theme_id = :id
            and stylesheet_id = :style.id
        }
    }

    retrieve style {
        do {
            select ss.stylesheet_id,
                   ss.locale_id,
                   ss.output_type, 
                   ss.pathname,
                   ss.item_id,
                   o.object_type
            from acs_stylesheets ss,
                 theme_stylesheet_map tsm, 
                 acs_objects o
            where ss.stylesheet_id = tsm.stylesheet_id
            and ss.stylesheet_id = o.object_id
            and tsm.theme_id = :id
        } map {
            style.id = ss.stylesheet_id;
            style.pathName = ss.pathname;
            style.objectType = o.object_type;
            style.localeID = ss.locale_id;
            style.outputType = ss.output_type;
            style.itemID = ss.item_id;
        }
    }
}
