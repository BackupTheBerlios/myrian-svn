//
// Copyright (C) 2001 ArsDigita Corporation. All Rights Reserved.
//
// The contents of this file are subject to the ArsDigita Public 
// License (the "License"); you may not use this file except in
// compliance with the License. You may obtain a copy of
// the License at http://www.arsdigita.com/ADPL.txt
//
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
//

model com.arsdigita.kernel;
//
// MEMBERSHIP ASSOCIATION
//

association {
    Group[0..n] groups = join users.user_id to group_member_map.member_id,
                         join group_member_map.group_id to groups.group_id;
    User[0..n] members = join groups.group_id to group_member_map.group_id,
                         join group_member_map.member_id to users.user_id;

    add members {
        do {
            insert into group_member_map
            (id, group_id, member_id)
            select
            acs_object_id_seq.nextval, :id, :members.id
            from dual
            where not exists (select 1 from group_member_map
                              where group_id = :id
                              and   member_id = :members.id)
        }
    }

    add groups {
        do {
            insert into group_member_map
            (id, group_id, member_id)
            values
            (acs_object_id_seq.nextval, :groups.id, :id)
        }
    }
}

//
// SUBGROUP ASSOCIATION
//

association {
    Group[0..n] supergroups = join groups.group_id 
                                to group_subgroup_map.subgroup_id,
                              join group_subgroup_map.group_id
                                to groups.group_id;
    Group[0..n] subgroups = join groups.group_id 
                              to group_subgroup_map.group_id, 
                            join group_subgroup_map.subgroup_id 
                              to groups.group_id;

    add supergroups {
        do {
            insert into group_subgroup_map
            (id, group_id, subgroup_id)
            values
            (acs_object_id_seq.nextval, :supergroups.id, :id)
        }
    }

    add subgroups {
        do {
            insert into group_subgroup_map
            (id, group_id, subgroup_id)
            select
            acs_object_id_seq.nextval, :id, :subgroups.id
            from dual
            where not exists (select 1 from group_subgroup_map
                              where group_id = :id
                              and subgroup_id = :members.id)
        }
    }
}
